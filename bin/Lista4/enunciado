Q1
CARREGAR E IMPRIMIR VALORES – Crie uma aplicação que seja capaz de armazenar 10 idades
fornecidas pelo usuário em uma estrutura de vetor, logo após carregar as idades, as mesmas deverão
ser exibidas na tela indicando a posição em que se encontram no vetor.
Q2
MENSALIDADES – Crie uma aplicação console em C responsável por armazenar 10 valores de
mensalidades, a aplicação deverá conter um menu interativo com as opções abaixo relacionadas:
..:: MENSALIDADES ::..
1. Zerar (deverá percorrer o vetor e atribuir valor zero a todos os endereços)
2. Carregar (deverá solicitar do usuário 10 mensalidades, cada mensalidade informada deverá ser
armazenada em uma posição do vetor).
3. Imprimir (deverá percorrer o vetor e exibir todas as mensalidades, exiba também a posição em
que a mensalidade está armazenada no vetor)
4. Somar (Deverá percorrer o vetor, somar todas as mensalidades e exibir o resultado).
Q3
IDADES – Crie uma aplicação console em C responsável por armazenar 8 idades de alunos, a aplicação
deverá conter um menu interativo com as opções abaixo relacionadas:
..:: IDADES ::..
1. Zerar (deverá percorrer o vetor e atribuir valor zero a todos os endereços)
2. Carregar (deverá solicitar do usuário 8 idades que serão armazenadas)
3. Imprimir (deverá percorrer o vetor e exibir todas as idades do vetor)
4. Somar (Deverá percorrer o vetor, somar todas as idades e exibir o resultado)
5. Pares (Deverá percorrer o vetor e exibir todas as idades pares)
6. Contar pares (Deverá percorrer o vetor, contar todas as idades pares e exibir a contagem)
7. Somar pares (Deverá percorrer o vetor, somar todas as idades que são pares e exibir a soma)
8. Menores idade (Deverá percorrer o vetor e exibir todas as idades que menores que 18)
2
9. Contar maiores idade (Deverá percorrer o vetor e contar o número de idades maiores ou igual
a 18 anos e exibir o resultado da contagem).
10. Somar maiores idade (Deverá percorrer o vetor e somar as idades maiores ou igual a 18 anos e
exibir o resultado da soma).
Q4
VALORES ALEATÓRIOS – Crie uma aplicação console em C responsável por armazenar 60 valores
inteiros, a aplicação deverá conter um menu de console com as opções abaixo relacionada:
..:: SORTEIO ::..
1. Zerar (deverá percorrer o vetor e atribuir valor -1 a todos os endereços)
2. Carregar aleatório (deverá carregar o vetor com valores inteiros aleatórios entre 1 e 60, o aluno
deverá pesquisar gerar valores aleatórios em C)
3. Imprimir (deverá percorrer o vetor e exibir todos os valores armazenados, exibir também a
posição em que o valor está armazenado)
4. Somar (Deverá percorrer o vetor, somar todos os valores e exibir o resultado)
5. Relatório valores ímpares (Deverá percorrer o vetor e realizar as operações: contar os ímpares,
somar os ímpares e exibir o resultado das operações)
6. Maiores que (Deverá solicitar um valor entre 1 e 60 para o usuário informar, com o valor
informado deve-se percorrer o vetor e exibir todos os valores que contidos maiores que o valor
informado pelo usuário)
7. Quantos existem/repetidos (Deverá solicitar do usuário um valor inteiro entre 1 e 60, o
programa deverá então percorrer o vetor e contar quantas vezes o número informado pelo
usuário existe no vetor e exibir o número de ocorrências encontradas)
Q5
VALORES ALEATÓRIOS 2 – Crie uma aplicação console em C responsável por armazenar 60 valores
inteiros, a aplicação deverá conter um menu de console com as opções abaixo relacionada:
..:: SORTEIO 2 ::..
1. Zerar (deverá percorrer o vetor e atribuir valor -1 a todos os endereços)
2. Carregar aleatório (deverá carregar o vetor com valores inteiros aleatórios entre 1 e 60)
3. Imprimir (deverá percorrer o vetor e exibir todos os valores armazenados)
4. Entre valores (deverá solicitar dois valores (ambos entre 1 e 60) do usuário, com base nos
valores fornecidos, deverá percorrer o vetor e exibir todos os valores armazenados que estão
3
entre os valores fornecidos, por exemplo, se o usuário informar os valores 13 e 20, todos os
valores armazenados entre 13 e 20 presentes no vetor deverão ser exibidos)
5. Exibir repetidos (deverá percorrer o vetor e então verificar quantas vezes cada valor presente
no vetor existe, somente valores que contiver alguma repetição deverão ser exibidos, por
exemplo, se o valores armazenados são 5, 12, 60, 3, 12, 3, 1, a resposta deverá ser 12 = 2, 3 = 2
pois o números 12 e 3 aparecem 2 vezes. Dicas: a) crie dois loopings, o segundo dentro do
primeiro, o primeiro será responsável por percorrer cada posição do vetor e o segundo contará
a quantidade de repetições que existe para cada posição acessada do primeiro; b) Se
considerarmos o exemplo apresentado, serão apresentadas 4 mensagens, 12 = 2, 3 = 2, 12 = 2
e 3 = 2, isso ocorre por que na primeira ocorrência do número 12 haverá uma contagem e ele
aparece 2x então será exibida a primeira mensagem, quando estiver na segunda ocorrência do
número 12 também será computado que o mesmo aparece 2x, então será novamente exibida
a mensagem, não se preocupe com essa situação de aparecer mensagens repetidas).